name: "Nix Configuration Validation"
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - ".github/**"
      - "README.md"
  pull_request:
    branches:
      - "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  security-check:
    name: GitGuardian Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@e4f45829b9b6f4664fe70d2a4dcd307a6833f422 # v1.43.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  lint:
    name: Statix Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Install Just
        uses: extractions/setup-just@v3
        with:
          just-version: "1.40.0"

      - name: Run statix linter
        run: |
          echo "Linting Flake..."
          if just lint; then
            echo "success=true" >> $GITHUB_ENV
          else
            echo "Lint failed, listing flake.lock for debugging:"
            cat flake.lock
            echo "success=false" >> $GITHUB_ENV
            exit 1
          fi

  test-configurations:
    name: Test Nix Configurations
    needs: [security-check, lint]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [macos-latest]
        include:
          - os: macos-latest
            nix_cmd: "darwin"
            nix_host: "mac"
            # - os: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v19

      - name: Install Just
        uses: extractions/setup-just@v3
        with:
          just-version: "1.40.0"

      - name: Enable Nix Flakes
        run: |
          mkdir -p ~/.config/nix
          echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf

      - name: Check Configuration
        run: |
          nix run nixpkgs#nh -- ${{ matrix.nix_cmd }} build --no-nom -u -H ${{ matrix.nix_host }} .
